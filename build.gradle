import java.util.function.Predicate

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.3'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'org.graalvm.buildtools.native' version '0.9.18'
	id 'jacoco'
	id 'org.sonarqube' version "3.5.0.2730"
}

group = 'it.gov.pagopa'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.springframework.cloud:spring-cloud-starter-stream-kafka'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.cloud:spring-cloud-stream-test-binder'
 	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation "com.github.tomakehurst:wiremock-jre8-standalone"
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
}


jacocoTestReport {
	dependsOn test
	reports {
		xml.enabled true
		xml.destination file("${buildDir}/reports/jacoco.xml")
	}
}

test {
    useJUnitPlatform()
	finalizedBy jacocoTestReport
}

 
graalvmNative {

	agent {
		defaultMode = "standard"
		enabled = true
		metadataCopy {
			inputTaskNames.add("bootRun")
			outputDirectories.add("src/main/resources/META-INF/native-image")
			mergeWithExisting = true
		}
		tasksToInstrumentPredicate = { t -> (t.name == "bootRun") } as Predicate<Task>
    }

    binaries {
        main {
            useFatJar = true
            javaLauncher = javaToolchains.launcherFor {
                languageVersion = JavaLanguageVersion.of(17)
                vendor = JvmVendorSpec.matching("GraalVM Community")
            }
			buildArgs.add('-H:IncludeResources=.*application.yaml$')
        }
    }

    metadataRepository {
        enabled = true
    }
}


// disable processAot until https://github.com/spring-cloud/spring-cloud-stream/issues/2655 was fix
tasks.named("processAot") {
    configure {
        enabled = false
    }
}

tasks.named("processTestAot") {
    configure {
        enabled = false
    }
}

ext {
	set('springCloudVersion', "2022.0.1")
}

dependencyManagement {
  imports {
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
  }
}
