# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

pr:
  autoCancel: false
  branches:
    include:
      - main
      - develop
      - uat

pool:
  vmImage: ubuntu-latest


steps:

  - task: SonarCloudPrepare@1
    displayName: 'Prepare SonarCloud analysis configuration'
    inputs:
      SonarCloud: '$(SONARCLOUD_SERVICE_CONN)'
      organization: '$(SONARCLOUD_ORG)'
      scannerMode: Other
      extraProperties: |
        sonar.projectKey=$(SONARCLOUD_PROJECT_KEY)
        sonar.projectName=$(SONARCLOUD_PROJECT_NAME)

  # - task: Gradle@3
  #   displayName: 'gradlew build'
  #   inputs:
  #     testResultsFiles: '**/TEST-*.xml'
  #     sonarQubeRunAnalysis: false
  #     codeCoverageToolOption: 'JaCoCo'
  #     gradleWrapperFile: 'gradlew'
  #     gradleOptions: '-Xmx3072m'
  #     javaHomeOption: 'JDKVersion'
  #     jdkVersionOption: '1.8'
  #     jdkArchitectureOption: 'x64'
  #     publishJUnitResults: true
  #     tasks: 'build'

  - task: Gradle@3
    displayName: 'gradlew build'
    inputs:
      goals: 'sonar:sonar'
      options: '-Dsonar.coverage.jacoco.xmlReportPaths=$(xmlReportPaths)'
      publishJUnitResults: false
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.17'
      effectivePomSkip: false
      sonarQubeRunAnalysis: true
      isJacocoCoverageReportXML: false
  - task: SonarCloudPublish@1
    inputs:
      pollingTimeoutSec: '300'