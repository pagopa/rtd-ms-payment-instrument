# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

pr:
  autoCancel: false
  branches:
    include:
      - main
      - develop
      - uat

pool:
  vmImage: ubuntu-latest


steps:

  - task: SonarCloudPrepare@1
    displayName: 'Prepare SonarCloud analysis configuration'
    inputs:
      SonarCloud: '$(SONARCLOUD_SERVICE_CONN)'
      organization: '$(SONARCLOUD_ORG)'
      scannerMode: Other
      extraProperties: |
        sonar.projectKey=$(SONARCLOUD_PROJECT_KEY)
        sonar.projectName=$(SONARCLOUD_PROJECT_NAME)


  - task: Gradle@3
    inputs:
      gradleWrapperFile: 'gradlew'
      tasks: 'clean build jacocoTestReport'
      publishJUnitResults: true
      testResultsFiles: '**/TEST-*.xml'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.17'
      sonarQubeRunAnalysis: false

  - bash: xmlReportPaths=$(find "$(pwd)" -path '*jacoco.xml' | sed 's/.*/&/' | tr '\n' ','); echo "##vso[task.setvariable variable=xmlReportPaths]$xmlReportPaths"
    displayName: finding jacoco.xml

  - task: Gradle@3
    displayName: 'gradlew build'
    inputs:
      gradleWrapperFile: 'gradlew'
      tasks: "sonar"
      options: '-Dsonar.coverage.jacoco.xmlReportPaths=$(xmlReportPaths)'
      publishJUnitResults: false
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.17'
      sonarQubeRunAnalysis: true
      sqGradlePluginVersionChoice: 'build'

  - task: SonarCloudPublish@1
    inputs:
      pollingTimeoutSec: '300'